version: '3.9'

services:

    web-nginx:
        container_name: maptex-web-nginx
        build:
            context: .
            dockerfile: .docker/web-nginx/Dockerfile
        ports:
            - 80:80
            - 433:433
        volumes:
           - .logs/nginx.log:/var/log/nginx.log
           - .docker/web-nginx/nginx.conf:/etc/nginx/conf.d/default.conf
           - ./:/var/www/html/
        links:
            - web-php-fpm
        networks:
            - internal

    web-php-fpm:
        container_name: maptex-web-php-fpm
        build:
            context: .
            dockerfile: .docker/web-php-fpm/Dockerfile
        ports:
            - 9000:9000
        volumes:
            - ./.logs/web-php-fpm.log:/var/log/php-fpm.log
            - ./:/var/www/html/
        networks:
            - internal

#    web-node:
#        container_name: maptex-web-node
#        build:
#            context: .
#            dockerfile: .docker/web-node/Dockerfile
#        volumes:
#            - ./.logs/web-node.log:/var/log/node.log
#            - ./:/var/www/html/

    #    mailhog:
    #        image: 'mailhog/mailhog:latest'
    #        ports:
    #            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
    #            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
    #        networks:
    #            - sail

#    db-mysql:
#        container_name: maptex-db-mysql
#        image: mysql:8.0.25
#        command:
#            - mysqld
#            - '--default-authentication-plugin=mysql_native_password'
#            - '--character-set-server=utf8'
#            - '--collation-server=utf8_unicode_ci'
#        environment:
#            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD_ROOT}'
#            MYSQL_DATABASE: '${DB_DATABASE}'
#            MYSQL_USER: '${DB_USERNAME}'
#            MYSQL_PASSWORD: '${DB_PASSWORD}'
#        volumes:
# #           - ./.logs/mysql.log:/var/log/mysql.log
#            - db_data_mysql:/var/lib/mysql
#            - db_data_mysql_backup:/docker-entrypoint-initdb.d
##        extra_hosts:
##            - "host.docker.internal:host-gateway"

#    db-postgres:
#        image: postgres:10.1
#        environment:
#            - POSTGRES_DB=${DP_NAME}
#            - POSTGRES_USER=docker_user
#            - POSTGRES_PASSWORD=docker_password
#        volumes:
#            - db_data_postgres:/var/lib/postgresql/data
#            - db_data_postgres_backup:/var/lib/postgresql/backup
#        ports:
#            - '62${DP_PORT}:5432'
#        extra_hosts:
#            - "host.docker.internal:host-gateway"

#    db-redis:
#        image: redis:latest
#        environment:
#            - REDIS_PASSWORD=docker_password
#        ports:
#            - '63${DP_PORT}:6379'
#        extra_hosts:
#            - "host.docker.internal:host-gateway"

#    db-memcached:
#        image: 'memcached:latest'
#        environment:
#            - MEMCACHED_MAX_CONNECTIONS=2000
#            - MEMCACHED_USERNAME=docker_user
#            - MEMCACHED_PASSWORD=docker_password
#        ports:
#            - "64${DP_PORT}:11211"
#        extra_hosts:
#            - "host.docker.internal:host-gateway"

volumes:
    db_data_mysql:
        name: db-data-mysql
    db_data_mysql_backup:
        name: db-data-mysql-backup
#    db_data_postgres:
#        name: db-data-postgres
#    db_data_postgres_backup:
#        name: db-data-postgres-backup

networks:
    internal:
        driver: bridge
