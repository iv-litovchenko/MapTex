version: '3.0'

services:

    # php -i | grep PDO
    # http://localhost:8011/
    # docker exec -it <container_id (php-apache)> bash
    php-apache:
        container_name: php-apache
        user: 'ivan:1000'
        restart: always
        build: ./.docker/php-apache
        depends_on:
            - db-mysql
        volumes:
            - '.:/var/www/html'
            - '.docker/conf/php.ini:/usr/local/etc/php/conf.d/php.ini'
        ports:
            - '8011:80'
        # command: npm run debug

    db-mysql:
        image: mysql
        container_name: db-mysql
        user: 'ivan:1000'
        command: [ 'mysqld', '--default-authentication-plugin=mysql_native_password', '--character-set-server=utf8', '--collation-server=utf8_unicode_ci' ]
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: MYSQL_ROOT_PASSWORD
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - '.docker-data/database/mysql:/var/lib/mysql'

    # http://localhost:8012/
    # Пароль: MYSQL_PASSWORD
    # Нужно создать таблицу "users"
    web-phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: web-phpmyadmin
        depends_on:
            - db-mysql
        environment:
            - PMA_ARBITRARY=1
        restart: always
        ports:
            - '8012:80'

    # http://localhost:8013/?server=db&username=MYSQL_USER&db=MYSQL_DATABASE
    # Пароль: MYSQL_PASSWORD
    # Нужно создать таблицу "users"
    web-adminer:
        image: adminer
        container_name: web-adminer
        restart: always
        environment:
            ADMINER_DEFAULT_SERVER: db-mysql
        ports:
            - '8013:8080'

    db-postgres:
        image: postgres:10.1
        restart: always
        container_name: db-postgres
        user: 'ivan:1000'
        environment:
            - POSTGRES_DB=${DB_DATABASE}
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_HOST=${DB_HOST}
            - PGDATA:/var/lib/postgresql/data
        ports:
            - '8014:5432'
        volumes:
            # Под инициализацией понимается sql код который создаст нужные таблицы и наполнит какими то данными
            # При первом поднятии контейнера
            # Да, это может быть БД с продакшена
            # - ./.docker/conf/postgres/:/docker-entrypoint-initdb.d/
            - ./.docker-data/database/postgres:/var/lib/postgresql/data

    # http://localhost:8015/
    web-pgadmin:
        container_name: web-pgadmin
        image: dpage/pgadmin4
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
            PGADMIN_DEFAULT_PASSWORD: admin
            PGADMIN_CONFIG_SERVER_MODE: 'False'
        ports:
            - "8015:80"
